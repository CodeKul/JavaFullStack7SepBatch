- a Relational Database Management System bases on Structured Query Language

Database
	- an application that stores the organised collection of records
Types:
Relational                              Non-Relational
1. eg. Oracle,MySql,                    1. MongoDb
	MS Sql,Postgres
2. data stored in table                 2. data stored in document format
	format
3. structured                           3. structured/unstructured

1. Data Definition Language
	- Create,Drop,Alter,Rename
2. Data Manipulation Language
	- insert,delete,update
3. Data Query Language/Data Retrieval Language
	- Select
4. Transaction Control Language
	- commit,roll back,savepoint
5. Data Control Language
	- Grant,Revoke

ACID Properties?

MySql Features
	- open source database
	- powerful
	- secure
	- scalable
	- allows roll-back
	- faster


Primary Key - used for column uniqueness
distinct - retrieve non-duplicate(unique) values of column
order by - to sort the records
group by - group the result
Aggregation functions - SUM(),AVG(),MIN(),MAX(),COUNT()
Having

SQL Joins :
- joins returns the records present in both tables
1. Inner Join
	- returns the matching records from both tables
2. Left or Left Outer Join
	- returns all the records from left table and match rows from right table
3. Right or Right Outer Join
	- returns all the records from right table and match rows from left table
4. Cross Join
	- does not require any common column to join two tables.
	- cartesian product means no of rows present in table 1 multiplied by
	  number of rows present in Table 2


Queries:
1. select e.empno,e.ename,e.job,d.dname from emp e inner join dept d on d.deptno = e.deptno;
2. select e.empno,e.ename,e.job,e.sal,d.dname from emp e left join dept d on e.deptno = d.deptno;
3. select e.empno,e.ename,e.job,e.sal,d.dname from emp e right join dept d on e.deptno = d.deptno;
4. mysql> select empno,ename,job,sal from emp where sal = (select min(sal) from emp);
5. mysql> select deptno,sum(sal) from emp group by deptno;
6. mysql>  select deptno,sum(sal) from emp group by deptno order by sum(sal);
   +--------+----------+
   | deptno | sum(sal) |
   +--------+----------+
   |     10 |  8750.00 |
   |     30 |  9400.00 |
   |   NULL | 10000.00 |
   |     20 | 10875.00 |
   +--------+----------+
   4 rows in set (0.00 sec)
7. mysql>select e.* from emp e inner join dept d on e.deptno = d.deptno where e.job = 'clerk' and d.dname = 'RESEARCH' and hiredate
   between '1980-01-01' and '1985-12-31';

8. mysql> select e.* from emp e inner join dept d on e.deptno = d.deptno where (e.job = 'clerk' or e.job = 'analyst') and d.dname = 'RESEARCH' and hiredate between '1980-01-01' and '1985-12-31';
   +-------+-------+---------+------+------------+---------+------+--------+
   | empno | ename | job     | mgr  | hiredate   | sal     | comm | deptno |
   +-------+-------+---------+------+------------+---------+------+--------+
   |  7369 | SMITH | CLERK   | 7902 | 1980-12-17 |  800.00 | NULL |     20 |
   |  7788 | SCOTT | ANALYST | 7566 | 1981-04-19 | 3000.00 | NULL |     20 |
   |  7902 | FORD  | ANALYST | 7566 | 1981-03-12 | 3000.00 | NULL |     20 |
   +-------+-------+---------+------+------------+---------+------+--------+
   3 rows in set (0.00 sec)

Questions:
1. fetch records having job 'SalesManager' with associate empno,ename,total salary(sal+comm),
	dept name & location.
--> select e.job,e.empno,e.ename,IFNULL(e.sal,0) + IFNULL(e.comm,0) as totalSalary,d.dname,d.loc from emp e inner join dept d
    on e.deptno = d.deptno where e.job = 'MANAGER';


