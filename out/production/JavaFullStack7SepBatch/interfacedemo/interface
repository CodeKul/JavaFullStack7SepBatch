- a blueprint of a class
- contains abstract methods & static constant
- methods are public & abstract by default
- variables are public,static & final
- used to achieve abstraction
- support the functionality of multiple inheritance
- used to achieve loose coupling
- represents IS-A relationship
- interface cannot instantiated

relationship between
class ---> class  ---- extends
interface ---> class ----- implements
interface ----> interface ----- extends

Marker Interface
- empty interface
- interface which has no member (no methods/no fields)
- tagged interface
- used to provide some essential info to JVM so that JVM may perform some useful operation
eg. Serializable,Cloneable & Remote etc

instanceof
- used to check whether an object is an specified class/interface or not.

Homework:
1. interface Printable{
	void print();
	}
	interface Showable{
	void print();
	}

	class TestMultipleInterface implements Printable,Showable{
	}